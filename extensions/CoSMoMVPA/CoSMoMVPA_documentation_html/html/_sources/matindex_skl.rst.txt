.. _`matindex_skl`:

====================================
CoSMoMVPA functions - skeleton files
====================================

.. toctree::
    :maxdepth: 2
    :hidden:

    matlab/cosmo_wizard_set_config_skl
    matlab/cosmo_align_skl
    matlab/cosmo_anova_feature_selector_skl
    matlab/cosmo_average_samples_skl
    matlab/cosmo_balance_partitions_skl
    matlab/cosmo_cartprod_skl
    matlab/cosmo_check_dataset_skl
    matlab/cosmo_check_external_skl
    matlab/cosmo_check_neighborhood_skl
    matlab/cosmo_check_partitions_skl
    matlab/cosmo_chunkize_skl
    matlab/cosmo_classify_knn_skl
    matlab/cosmo_classify_lda_skl
    matlab/cosmo_classify_libsvm_skl
    matlab/cosmo_classify_matlabsvm_skl
    matlab/cosmo_classify_matlabsvm_2class_skl
    matlab/cosmo_classify_meta_feature_selection_skl
    matlab/cosmo_classify_naive_bayes_skl
    matlab/cosmo_classify_nn_skl
    matlab/cosmo_classify_svm_skl
    matlab/cosmo_cluster_neighborhood_skl
    matlab/cosmo_clusterize_skl
    matlab/cosmo_config_skl
    matlab/cosmo_confusion_matrix_skl
    matlab/cosmo_convert_neighborhood_skl
    matlab/cosmo_corr_skl
    matlab/cosmo_correlation_measure_skl
    matlab/cosmo_cross_neighborhood_skl
    matlab/cosmo_crossvalidate_skl
    matlab/cosmo_crossvalidation_measure_skl
    matlab/cosmo_dataset_slice_fa_skl
    matlab/cosmo_dataset_slice_sa_skl
    matlab/cosmo_dim_find_skl
    matlab/cosmo_dim_generalization_measure_skl
    matlab/cosmo_dim_insert_skl
    matlab/cosmo_dim_match_skl
    matlab/cosmo_dim_prune_skl
    matlab/cosmo_dim_remove_skl
    matlab/cosmo_dim_rename_skl
    matlab/cosmo_dim_slice_skl
    matlab/cosmo_dim_transpose_skl
    matlab/cosmo_dir_skl
    matlab/cosmo_disp_skl
    matlab/cosmo_dissimilarity_matrix_measure_skl
    matlab/cosmo_distatis_skl
    matlab/cosmo_find_local_extrema_skl
    matlab/cosmo_flatten_skl
    matlab/cosmo_fmri_convert_xform_skl
    matlab/cosmo_fmri_dataset_skl
    matlab/cosmo_fmri_deoblique_skl
    matlab/cosmo_fmri_orientation_skl
    matlab/cosmo_fmri_reorient_skl
    matlab/cosmo_fx_skl
    matlab/cosmo_independent_samples_partitioner_skl
    matlab/cosmo_index_unique_skl
    matlab/cosmo_interval_neighborhood_skl
    matlab/cosmo_isequaln_skl
    matlab/cosmo_isfield_skl
    matlab/cosmo_make_temp_filename_skl
    matlab/cosmo_map2fmri_skl
    matlab/cosmo_map2meeg_skl
    matlab/cosmo_map2surface_skl
    matlab/cosmo_map_pca_skl
    matlab/cosmo_mask_dim_intersect_skl
    matlab/cosmo_match_skl
    matlab/cosmo_measure_clusters_skl
    matlab/cosmo_meeg_baseline_correct_skl
    matlab/cosmo_meeg_chan_neighborhood_skl
    matlab/cosmo_meeg_chan_neighbors_skl
    matlab/cosmo_meeg_chantype_skl
    matlab/cosmo_meeg_dataset_skl
    matlab/cosmo_meeg_find_layout_skl
    matlab/cosmo_meeg_layout_collection_skl
    matlab/cosmo_meeg_read_layout_skl
    matlab/cosmo_meeg_senstype2layout_mapping_skl
    matlab/cosmo_meeg_senstype_collection_skl
    matlab/cosmo_meta_feature_selection_classifier_skl
    matlab/cosmo_montecarlo_cluster_stat_skl
    matlab/cosmo_naive_bayes_classifier_searchlight_skl
    matlab/cosmo_nchoosek_partitioner_skl
    matlab/cosmo_neighborhood_split_skl
    matlab/cosmo_nfold_partitioner_skl
    matlab/cosmo_normalize_skl
    matlab/cosmo_oddeven_partitioner_skl
    matlab/cosmo_overlap_skl
    matlab/cosmo_parallel_get_nproc_available_skl
    matlab/cosmo_parcellfun_skl
    matlab/cosmo_pca_skl
    matlab/cosmo_pdist_skl
    matlab/cosmo_plot_slices_skl
    matlab/cosmo_publish_run_scripts_skl
    matlab/cosmo_rand_skl
    matlab/cosmo_randomize_targets_skl
    matlab/cosmo_randperm_skl
    matlab/cosmo_remove_useless_data_skl
    matlab/cosmo_run_tests_skl
    matlab/cosmo_sample_unique_skl
    matlab/cosmo_searchlight_skl
    matlab/cosmo_set_path_skl
    matlab/cosmo_show_progress_skl
    matlab/cosmo_slice_skl
    matlab/cosmo_sphere_offsets_skl
    matlab/cosmo_spherical_neighborhood_skl
    matlab/cosmo_split_skl
    matlab/cosmo_squareform_skl
    matlab/cosmo_stack_skl
    matlab/cosmo_stat_skl
    matlab/cosmo_statcode_skl
    matlab/cosmo_strjoin_skl
    matlab/cosmo_strsplit_skl
    matlab/cosmo_structjoin_skl
    matlab/cosmo_surface_dataset_skl
    matlab/cosmo_surficial_neighborhood_skl
    matlab/cosmo_synthetic_dataset_skl
    matlab/cosmo_tail_skl
    matlab/cosmo_target_dsm_corr_measure_skl
    matlab/cosmo_type_skl
    matlab/cosmo_unflatten_skl
    matlab/cosmo_vol_coordinates_skl
    matlab/cosmo_vol_grid_convert_skl
    matlab/cosmo_warning_skl
    matlab/cosmo_winner_indices_skl
    matlab/cosmo_wtf_skl
    matlab/cosmo_notify_test_skipped_skl
    matlab/cosmo_skip_test_if_no_external_skl

=================================================== =================================================================================================
--------------------------------------------------- -------------------------------------------------------------------------------------------------
**All functions**
--------------------------------------------------- -------------------------------------------------------------------------------------------------
:ref:`cosmo_align_skl`                              find permutation so that values in two inputs are matched
:ref:`cosmo_anova_feature_selector_skl`             find the features that show the most variance between classes
:ref:`cosmo_average_samples_skl`                    average subsets of samples by unique combinations of sample attributes
:ref:`cosmo_balance_partitions_skl`                 balances a partition so that each target occurs equally often in each training and test chunk
:ref:`cosmo_cartprod_skl`                           returns the cartesian product with all combinations of the input
:ref:`cosmo_check_dataset_skl`                      Check consistency of a dataset.
:ref:`cosmo_check_external_skl`                     Checks whether a certain external toolbox exists, or list citation info
:ref:`cosmo_check_neighborhood_skl`                 check that a neighborhood is kosher
:ref:`cosmo_check_partitions_skl`                   check whether partitions are balanced and not double-dippy
:ref:`cosmo_chunkize_skl`                           assigns chunks that are as balanced as possible based on targets.
:ref:`cosmo_classify_knn_skl`                       k-nearest neighbor classifier
:ref:`cosmo_classify_lda_skl`                       linear discriminant analysis classifier - without prior
:ref:`cosmo_classify_libsvm_skl`                    libsvm-based SVM classifier
:ref:`cosmo_classify_matlabsvm_2class_skl`          svm classifier wrapper (around svmtrain/svmclassify)
:ref:`cosmo_classify_matlabsvm_skl`                 SVM multi-classifier using matlab's SVM implementation
:ref:`cosmo_classify_meta_feature_selection_skl`    meta classifier that uses feature selection on the training data
:ref:`cosmo_classify_naive_bayes_skl`               naive bayes classifier
:ref:`cosmo_classify_nn_skl`                        nearest neighbor classifier
:ref:`cosmo_classify_svm_skl`                       classifier wrapper that uses either matlab's or libsvm's SVM.
:ref:`cosmo_cluster_neighborhood_skl`               define neighborhood suitable for cluster-based analysis
:ref:`cosmo_clusterize_skl`                         fast depth-first clustering based on equal values of neighbors
:ref:`cosmo_config_skl`                             return a struc with configuration settings, or store such settings
:ref:`cosmo_confusion_matrix_skl`                   Returns a confusion matrix
:ref:`cosmo_convert_neighborhood_skl`               Converts between cell, matrix and struct representations of neighborhoods
:ref:`cosmo_corr_skl`                               Computes correlation - faster than than matlab's "corr" for Pearson.
:ref:`cosmo_correlation_measure_skl`                Computes a split-half correlation measure
:ref:`cosmo_cross_neighborhood_skl`                 cross neighborhoods along dataset dimensions
:ref:`cosmo_crossvalidate_skl`                      performs cross-validation using a classifier
:ref:`cosmo_crossvalidation_measure_skl`            performs cross-validation using a classifier
:ref:`cosmo_dataset_slice_fa_skl`                   Slice a dataset by features (columns) [deprecated]
:ref:`cosmo_dataset_slice_sa_skl`                   Slice a dataset by samples (rows) [deprecated]
:ref:`cosmo_dim_find_skl`                           find dimension attribute in dataset
:ref:`cosmo_dim_generalization_measure_skl`         measure generalization across pairwise combinations over time (or any other dimension)
:ref:`cosmo_dim_insert_skl`                         insert a dataset dimension
:ref:`cosmo_dim_match_skl`                          return a mask indicating match of dataset dimensions with values
:ref:`cosmo_dim_prune_skl`                          prune dataset dimension values that are not used after slicing
:ref:`cosmo_dim_remove_skl`                         remove a dataset dimension
:ref:`cosmo_dim_rename_skl`                         rename dimension attribute name
:ref:`cosmo_dim_slice_skl`                          slice and prune a dataset with dimension attributes [deprecated]
:ref:`cosmo_dim_transpose_skl`                      move a dataset dimension from samples to features or vice versa
:ref:`cosmo_dir_skl`                                list files recursively in a directory
:ref:`cosmo_disp_skl`                               display the input as a string representation
:ref:`cosmo_dissimilarity_matrix_measure_skl`       Compute a dissimilarity matrix measure
:ref:`cosmo_distatis_skl`                           apply DISTATIS measure to each feature
:ref:`cosmo_find_local_extrema_skl`                 find local extrema in a dataset using a neighborhood
:ref:`cosmo_flatten_skl`                            flattens an arbitrary array to a dataset structure
:ref:`cosmo_fmri_convert_xform_skl`                 convert xform code between numeric and string in fmri dataset
:ref:`cosmo_fmri_dataset_skl`                       load an fmri volumetric dataset
:ref:`cosmo_fmri_deoblique_skl`                     de-oblique a dataset
:ref:`cosmo_fmri_orientation_skl`                   get orientation of a dataset
:ref:`cosmo_fmri_reorient_skl`                      Change the orientation of an fmri dataset
:ref:`cosmo_fx_skl`                                 apply a function to unique combinations of .sa or .fa values
:ref:`cosmo_independent_samples_partitioner_skl`    Compute partitioning scheme based on dataset with independent samples
:ref:`cosmo_index_unique_skl`                       index unique (combinations of) elements
:ref:`cosmo_interval_neighborhood_skl`              compute neighborhoods stretching intervals
:ref:`cosmo_isequaln_skl`                           compares two input for equality with NaNs considered being equal
:ref:`cosmo_isfield_skl`                            checks the presence of (possibly nested) fieldnames in a struct
:ref:`cosmo_make_temp_filename_skl`                 give temporary filename that does not exist when this function is called
:ref:`cosmo_map2fmri_skl`                           maps a dataset structure to a NIFTI, AFNI, or BV structure or file
:ref:`cosmo_map2meeg_skl`                           maps a dataset to a FieldTrip or EEGlab structure or file
:ref:`cosmo_map2surface_skl`                        maps a dataset structure to AFNI/SUMA NIML dset or BV SMP file
:ref:`cosmo_map_pca_skl`                            normalize dataset either by estimating or applying estimated parameters
:ref:`cosmo_mask_dim_intersect_skl`                 find intersection mask across a set of datasets
:ref:`cosmo_match_skl`                              returns a mask indicating matching occurences in two arrays or cells relative to the second array
:ref:`cosmo_measure_clusters_skl`                   General cluster measure
:ref:`cosmo_meeg_baseline_correct_skl`              correct baseline of MEEG dataset
:ref:`cosmo_meeg_chan_neighborhood_skl`             determine neighborhood of channels in MEEG dataset
:ref:`cosmo_meeg_chan_neighbors_skl`                find neighbors of MEEG channels
:ref:`cosmo_meeg_chantype_skl`                      return channel types and optionally a feature mask matching a type
:ref:`cosmo_meeg_dataset_skl`                       Returns a dataset structure based on MEEG data
:ref:`cosmo_meeg_find_layout_skl`                   finds an MEEG channel layout associated with a dataset
:ref:`cosmo_meeg_layout_collection_skl`             return supported MEEG channel layouts
:ref:`cosmo_meeg_read_layout_skl`                   Read FieldTrip layout
:ref:`cosmo_meeg_senstype2layout_mapping_skl`       return mapping from MEEG sensor types to sensor layouts
:ref:`cosmo_meeg_senstype_collection_skl`           return supported MEEG acquisition systems and their channel labels
:ref:`cosmo_meta_feature_selection_classifier_skl`  meta classifier that uses feature selection on the training data [deprecated]
:ref:`cosmo_montecarlo_cluster_stat_skl`            compute random-effect cluster statistics corrected for multiple comparisons
:ref:`cosmo_naive_bayes_classifier_searchlight_skl` Run (fast) Naive Bayes classifier searchlight with crossvalidation
:ref:`cosmo_nchoosek_partitioner_skl`               partitions for into nchoosek(n,k) parititions with optional grouping schemas.
:ref:`cosmo_neighborhood_split_skl`                 partitions a neighborhood in a cell with (smaller) neigborhoods
:ref:`cosmo_nfold_partitioner_skl`                  generates an n-fold partition scheme
:ref:`cosmo_normalize_skl`                          normalize dataset either by estimating or applying estimated parameters
:ref:`cosmo_notify_test_skipped_skl`                notify that a test in the test suite is skipped
:ref:`cosmo_oddeven_partitioner_skl`                generates an odd-even partition scheme
:ref:`cosmo_overlap_skl`                            compute overlap between vectors or cellstrings in two cells
:ref:`cosmo_parallel_get_nproc_available_skl`       get number of processes available from Matlab parallel processing pool
:ref:`cosmo_parcellfun_skl`                         applies a function to elements in a cell in parallel
:ref:`cosmo_pca_skl`                                Principal Component Analysis
:ref:`cosmo_pdist_skl`                              compute pair-wise distance between samples in a matrix
:ref:`cosmo_plot_slices_skl`                        Plots a set of slices from a dataset, nifti image, or 3D data array
:ref:`cosmo_publish_run_scripts_skl`                helper function to publish example scripts (for developers)
:ref:`cosmo_rand_skl`                               generate uniform pseudo-random numbers, optionally using a seed value
:ref:`cosmo_randomize_targets_skl`                  provides randomized target labels
:ref:`cosmo_randperm_skl`                           generate random permutation of integers
:ref:`cosmo_remove_useless_data_skl`                remove 'useless' (constant and/or non-finite) samples or features
:ref:`cosmo_run_tests_skl`                          run unit and documentation tests
:ref:`cosmo_sample_unique_skl`                      sample without replacement from subsets of integers in balanced manner
:ref:`cosmo_searchlight_skl`                        Generic searchlight function returns a map of results computed at each searchlight location
:ref:`cosmo_set_path_skl`                           set the matlab path for CoSMoMVPA
:ref:`cosmo_show_progress_skl`                      Shows a progress bar, and time elapsed and expected to complete.
:ref:`cosmo_skip_test_if_no_external_skl`           Notify that test in the test suite is skipped if no external is present
:ref:`cosmo_slice_skl`                              Slice a dataset by samples (the default) or features
:ref:`cosmo_sphere_offsets_skl`                     computes sub index offsets for voxels in a sphere
:ref:`cosmo_spherical_neighborhood_skl`             computes neighbors for a spherical searchlight
:ref:`cosmo_split_skl`                              splits a dataset by unique values in (a) sample or feature attribute(s).
:ref:`cosmo_squareform_skl`                         converts pair-wise distances between matrix and vector form
:ref:`cosmo_stack_skl`                              stacks multiple datasets to yield a single dataset
:ref:`cosmo_stat_skl`                               compute t-test or F-test (ANOVA) statistic
:ref:`cosmo_statcode_skl`                           Convert statcode for different analysis packages
:ref:`cosmo_strjoin_skl`                            joins strings using a delimeter string
:ref:`cosmo_strsplit_skl`                           splits a string based on another delimeter string
:ref:`cosmo_structjoin_skl`                         joins values in structs or key-value pairs
:ref:`cosmo_surface_dataset_skl`                    Returns a dataset structure based on surface mesh data
:ref:`cosmo_surficial_neighborhood_skl`             neighborhood definition for surface-based searchlight
:ref:`cosmo_synthetic_dataset_skl`                  generate synthetic dataset
:ref:`cosmo_tail_skl`                               find values in left or right tail of a vector or string
:ref:`cosmo_target_dsm_corr_measure_skl`            measure correlation with target dissimilarity matrix
:ref:`cosmo_type_skl`                               print or return ASCII contents of a file
:ref:`cosmo_unflatten_skl`                          unflattens a dataset from 2 to (1+K) dimensions.
:ref:`cosmo_vol_coordinates_skl`                    convert to and from spatial (x,y,z) coordinates
:ref:`cosmo_vol_grid_convert_skl`                   convert between volumetric (fmri) and grid-based (meeg source) dataset
:ref:`cosmo_warning_skl`                            show a warning message; by default just once for each message
:ref:`cosmo_winner_indices_skl`                     Given multiple predictions, get indices that were predicted most often.
:ref:`cosmo_wizard_set_config_skl`                  GUI-based 'wizard' to set CoSMoMVPA configuration file
:ref:`cosmo_wtf_skl`                                return system, toolbox and externals information
=================================================== =================================================================================================
